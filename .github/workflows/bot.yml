# .github/workflows/settlement-bot.yml
name: Settlement Bot (cron)

on:
  schedule:
    - cron: "*/1 * * * *" # run every 5 minutes
  workflow_dispatch:
    inputs:
      mode:
        description: "Run mode (only 'once' supported in CI)"
        required: true
        default: "once"
        type: choice
        options: ["once"]

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    # Removed working-directory to avoid conflicts with cd commands
    env:
      # secrets — set these in GitHub → Settings → Secrets → Actions
      RPC_HTTP_URL: ${{ secrets.RPC_HTTP_URL }}
      CONTRACT_ADDRESS: "0x3875b8b82e58733c1667224eb8bf5f449d7dbb74"
      DEPLOYMENT_BLOCK: "23291452"
      PRIVATE_KEY: ${{ secrets.DFGSDFGTEH_PRIVATE_KEY }}
      CHAIN_ID: "1"

      # optional non-secret config (can also be repo variables)
      LOG_CHUNK: ${{ vars.LOG_CHUNK || '500' }}
      STATE_FILE: ${{ vars.STATE_FILE || './state.json' }}
      # MAX_PARALLEL_TX: ${{ vars.MAX_PARALLEL_TX || '3' }}
      # GAS_MULTIPLIER: ${{ vars.GAS_MULTIPLIER || '1.1' }}
      # CONFIRMATIONS: ${{ vars.CONFIRMATIONS || '2' }}
      WS_URL: ${{ secrets.WS_URL }} # not needed in cron mode
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: bot/package.json

      - name: Install dependencies
        run: |
          cd bot
          echo "Installing dependencies in $(pwd)"
          npm ci

      - name: Build bot
        run: |
          cd bot
          echo "Building bot in $(pwd)"
          echo "Contents before build:"
          ls -la
          echo "Running npm run build with verbose output:"
          npm run build 2>&1 || {
            echo "Build failed! Checking for errors:"
            echo "TypeScript config:"
            cat tsconfig.json || echo "No tsconfig.json found"
            echo "Package.json scripts:"
            cat package.json | grep -A 5 -B 5 "scripts" || echo "No scripts found"
            exit 1
          }
          echo "Contents after build:"
          ls -la
          echo "Checking dist directory:"
          ls -la dist/ || echo "dist directory not found"
          echo "Checking if dist/src/index.js exists:"
          test -f dist/src/index.js && echo "dist/src/index.js exists" || echo "dist/src/index.js missing"

      - name: Run bot
        run: |
          cd bot
          echo "Running bot in $(pwd)"
          echo "Checking if dist/src/index.js exists:"
          if [ ! -f dist/src/index.js ]; then
            echo "ERROR: dist/src/index.js not found! Build must have failed."
            echo "Contents of bot directory:"
            ls -la
            echo "Contents of dist directory:"
            ls -la dist/ || echo "dist directory does not exist"
            echo "Contents of dist/src directory:"
            ls -la dist/src/ || echo "dist/src directory does not exist"
            exit 1
          fi
          echo "dist/src/index.js found, running bot..."
          node dist/src/index.js --mode ${{ github.event.inputs.mode || 'once' }}

      - name: Upload state.json
        if: always()
        run: |
          echo "Checking for state files:"
          find . -name "state.json" -type f || echo "No state.json found"
          find . -name "*.json" -type f | head -10 || echo "No JSON files found"
        continue-on-error: true

      - name: Upload state.json artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: state-${{ github.run_id }}
          path: |
            bot/state.json
            bot/*.json
          if-no-files-found: warn
