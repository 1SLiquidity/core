# .github/workflows/local-monitor.yml
name: 1SLiquidity Trade Monitor & Executor

on:
  schedule:
    - cron: "*/5 * * * *" # run every 5 minutes
  workflow_dispatch:
    inputs:
      mode:
        description: "Run mode (only 'once' supported in CI)"
        required: true
        default: "once"
        type: choice
        options: ["once"]

jobs:
  monitor-and-execute:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    # Removed working-directory to avoid conflicts with cd commands
    env:
      # secrets ‚Äî set these in GitHub ‚Üí Settings ‚Üí Secrets ‚Üí Actions
      MAINNET_RPC_URL: ${{ secrets.MAINNET_RPC_URL }}
      PRIVATE_KEY: ${{ secrets.DFGSDFGTEH_PRIVATE_KEY }}
      CHAIN_ID: "1"

      # Contract addresses
      CORE_CONTRACT: "0x3875b8b82e58733c1667224eb8bf5f449d7dbb74"
      REGISTRY_CONTRACT: "0xc89239484b23cd68f886964a29d45b9b9c2be63b"
      EXECUTOR_CONTRACT: "0x5ed2d1846ae1770a61b36b9a1704485f4904361f"
      STREAM_DAEMON_CONTRACT: "0x655e264166dacec690cbcec8ecb88cc5be68ab21"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: local-monitor/package.json

      - name: Download previous local data
        uses: actions/download-artifact@v4
        with:
          name: local-data-latest
          path: local-monitor/
        continue-on-error: true

      - name: Check local data download
        run: |
          echo "Checking if localData.json was downloaded..."
          if [ -f local-monitor/localData.json ]; then
            echo "‚úÖ Local data file found! Contents:"
            cat local-monitor/localData.json
          else
            echo "‚ùå No local data file found, will start fresh"
          fi

      - name: Install dependencies
        run: |
          cd local-monitor
          echo "Installing dependencies in $(pwd)"
          npm ci

      - name: Build monitor
        run: |
          cd local-monitor
          echo "Building monitor in $(pwd)"
          echo "Contents before build:"
          ls -la
          echo "Running npm run build with verbose output:"
          npm run build 2>&1 || {
            echo "Build failed! Checking for errors:"
            echo "TypeScript config:"
            cat tsconfig.json || echo "No tsconfig.json found"
            echo "Package.json scripts:"
            cat package.json | grep -A 5 -B 5 "scripts" || echo "No scripts found"
            exit 1
          }
          echo "Contents after build:"
          ls -la
          echo "Checking dist directory:"
          ls -la dist/ || echo "dist directory not found"

      - name: Run historical analysis (Step 1)
        run: |
          cd local-monitor
          echo "üîç Step 1: Running historical analysis to cache outstanding trades..."
          echo "Running in $(pwd)"
          npm run historical

      - name: Execute outstanding trades (Step 2)
        run: |
          cd local-monitor
          echo "üöÄ Step 2: Executing outstanding trades..."
          echo "Running in $(pwd)"
          npm run execute-trades

      - name: Wait for transactions to be mined (Step 3)
        run: |
          echo "‚è≥ Step 3: Waiting 24 seconds for transactions to be mined..."
          sleep 24

      - name: Run historical analysis again (Step 4)
        run: |
          cd local-monitor
          echo "üîç Step 4: Running historical analysis to check updated state..."
          echo "Running in $(pwd)"
          npm run historical

      - name: Upload local data artifact
        if: always()
        run: |
          echo "Checking for local data files:"
          find . -name "localData.json" -type f || echo "No localData.json found"
          find . -name "*.json" -type f | head -10 || echo "No JSON files found"
        continue-on-error: true

      - name: Upload local data artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: local-data-latest
          path: |
            local-monitor/localData.json
            local-monitor/*.json
          if-no-files-found: warn

      - name: Summary
        run: |
          echo "‚úÖ 1SLiquidity Trade Monitor & Executor completed successfully!"
          echo "üìä Check the artifacts for the latest localData.json file"
