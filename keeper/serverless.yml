service: one-sliquidity-keeper

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  timeout: 180 # 3 minutes default timeout
  memorySize: 1024 # Increased memory for better performance
  httpApi:
    cors: true
  apiGateway:
    minimumCompressionSize: 1024 # Enable compression for responses
    shouldStartNameWithService: true
    # Configure longer timeout for REST API
    restApiConfig:
      endpointType: REGIONAL
      # Set a longer timeout (5 minutes)
      timeout: 300000
  environment:
    NODE_ENV: ${self:provider.stage}
    RPC_URL: ${env:RPC_URL, 'fallback-rpc-url'}
    CHAIN_ID: ${env:CHAIN_ID, 1}
    REDIS_HOST: ${env:REDIS_HOST, 'localhost'}
    REDIS_PORT: ${env:REDIS_PORT, 6379}
    REDIS_PASSWORD: ${env:REDIS_PASSWORD, ''}
    REDIS_URL: ${env:REDIS_URL, ''}

functions:
  reserves:
    handler: src/functions/reserves/handler.main
    timeout: 300 # 5 minutes timeout
    memorySize: 1024
    events:
      - http:
          path: reserves
          method: get
          cors: true
          integration: lambda
          timeout: 300000 # 5 minutes in milliseconds
      - http:
          path: reserves
          method: post
          cors: true
          integration: lambda
          timeout: 300000
      - http:
          path: reserves
          method: options
          cors: true
  price:
    handler: src/functions/price/handler.main
    timeout: 30
    events:
      - http:
          path: /price
          method: get
          cors: true
  depth:
    handler: src/functions/depth/handler.main
    timeout: 30
    events:
      - http:
          path: /depth
          method: get
          cors: true

plugins:
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-dotenv-plugin

custom:
  serverless-offline:
    httpPort: 3001
    lambdaPort: 3002
    noTimeout: true # This prevents the local server from timing out
  dotenv:
    path: .env
    include:
      - RPC_URL
      - CHAIN_ID
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      - REDIS_URL
