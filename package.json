{
  "name": "1sliquidity",
  "version": "1.0.0",
  "description": "**Foundry is a blazing fast, portable and modular toolkit for Ethereum application development written in Rust.**",
  "main": "index.js",
  "directories": {
    "lib": "lib",
    "test": "test"
  },
  "scripts": {
    "go": "forge test && forge build",
    "rpc": "forge test --rpc-url base-sepolia --rpc-chain-id 84532",
    "deploy-fork": "forge script ForkDeployer.s.sol --rpc-url buildbear",
    "# DEX Tests": "# Tests for individual DEXs",
    "tests": "source .env && anvil --fork-url https://mainnet.infura.io/v3/$INFURA_KEY --port 8545 && npm run test:all:anvil",
    "test:uniswap-v2": "forge test --match-path script/processes/UniswapV2TradePlacement.s.sol -vvvv --fork-url mainnet --via-ir ",
    "test:sushiswap": "forge test --match-path script/processes/SushiswapTradePlacement.s.sol -vvvv --fork-url mainnet --via-ir ",
    "test:uniswap-v3": "forge test --match-path script/processes/UniswapV3TradePlacement.s.sol -vvvv --fork-url mainnet --via-ir ",
    "test:balancer": "forge test --match-path script/processes/BalancerTradePlacement.s.sol -vvvv --fork-url mainnet --via-ir ",
    "test:curve": "forge test --match-path script/processes/CurveTradePlacement.s.sol -vvvv --fork-url mainnet --via-ir ",
    "test:pancakeswap": "forge test --match-path script/processes/PancakeSwapTradePlacement.s.sol -vvvv --fork-url mainnet --via-ir ",
    "test:oneinch": "forge test --match-path script/processes/OneInchTradePlacement.s.sol -vvvv --fork-url mainnet --via-ir ",
    "test:dexs": "npm run test:uniswap-v2 && npm run test:sushiswap && npm run test:uniswap-v3",
    "test:dexs:barebones": "npm run test:uniswap-v2 && npm run test:sushiswap && npm run test:pancakeswap",
    "test:dexs-anvil:barebones": "npm run test:uniswap-v2-anvil && npm run test:sushiswap-anvil && npm run test:pancakeswap-anvil",
    "test:dexs:extended": "npm run test:uniswap-v2 && npm run test:sushiswap && npm run test:balancer && npm run test:curve && npm run test:pancakeswap && npm run test:oneinch",
    "test:dexs-anvil:extended": "npm run test:uniswap-v2-anvil && npm run test:sushiswap-anvil && npm run test:balancer-anvil && npm run test:curve-anvil && npm run test:pancakeswap-anvil && npm run test:oneinch-anvil",
    "# Process Tests": "# Tests for individual processes",
    "test:protocol": "forge script script/Protocol.s.sol:Protocol --via-ir --rpc-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec -vvvv",
    "test:trade-placement": "forge test --match-path script/processes/TradePlacement.s.sol --fork-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec --via-ir && forge script script/TestSingleReserves.s.sol:TestReservesScript --via-ir --rpc-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec",
    "test:trade-cancel": "forge script script/processes/TradeCancel.s.sol:TradeCancel --via-ir --rpc-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec -vvvv",
    "test:trade-cancel-test": "FOUNDRY_PROFILE=via_ir forge test --match-path script/processes/TradeCancel.s.sol -vvv --fork-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec",
    "test:instasettle": "forge script script/processes/Instasettle.s.sol:Instasettle --via-ir --rpc-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec -vvvv",
    "test:gas-caching": "forge script script/processes/GasCaching.s.sol:GasCaching --via-ir --rpc-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec -vvvv",
    "test:multi:bear": "forge script script/processes/MultiSettle.s.sol:MultiSettle --via-ir --rpc-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec -vvvv",
    "test:processes": "npm run test:protocol && npm run test:trade-placement",
    "# Utility Tests": "# Tests for utilities and reserves",
    "test:reserves": "forge script script/TestSingleReserves.s.sol:TestReservesScript --via-ir --rpc-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec -vvvv",
    "# Combined Test Commands": "# Commands to run multiple test suites",
    "test:bear": "npm run test:dexs && npm run test:processes && npm run test:reserves && npm run test:trade-cancel-test",
    "test:anvil": "forge test --match-path \"test/**/*.t.sol\" --fork-url http://localhost:8545 -vvv --via-ir",
    "test:all:anvil": "npm run anvil:start && npm run test:dexs-anvil:barebones && npm run test:processes-anvil && npm run test:reserves-anvil && npm run test:trade-cancel-test-anvil && npm run test:insta-anvil",
    "test:all:buildbear": "forge test --match-path \"test/**/*.t.sol\" --fork-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec -vvv",
    "test:all:choose": "node scripts/run-tests.js",
    "test:quick": "npm run test:uniswap-v2 && npm run test:trade-placement",
    "test:verbose": "FOUNDRY_PROFILE=via_ir forge script script/processes/*.s.sol -vvvv --fork-url https://rpc.buildbear.io/foolish-darkphoenix-2fe074ec --broadcast",
    "anvil:fork": "anvil --fork-url https://mainnet.infura.io/v3/$INFURA_KEY",
    "anvil:start": "lsof -ti:8545 > /dev/null 2>&1 || npm run anvil:fork & sleep 3",
    "anvil:hard-start": "source .env && anvil --fork-url https://mainnet.infura.io/v3/$INFURA_KEY --port 8545",
    "#  Anvil Fork Tests": "# Tests running against local anvil fork",
    "test:dexs-anvil": "npm run test:uniswap-v2-anvil && npm run test:sushiswap-anvil && npm run test:uniswap-v3-anvil",
    "test:uniswap-v2-anvil": "forge test --match-path script/processes/UniswapV2TradePlacement.s.sol -vvvv --fork-url http://localhost:8545 --via-ir",
    "test:sushiswap-anvil": "forge test --match-path script/processes/SushiswapTradePlacement.s.sol -vvvv --fork-url http://localhost:8545 --via-ir",
    "test:uniswap-v3-anvil": "forge test --match-path script/processes/UniswapV3TradePlacement.s.sol -vvvv --fork-url http://localhost:8545 --via-ir",
    "test:balancer-anvil": "forge test --match-path script/processes/BalancerTradePlacement.s.sol -vvvv --fork-url http://localhost:8545 --via-ir",
    "test:curve-anvil": "forge test --match-path script/processes/CurveTradePlacement.s.sol -vvvv --fork-url http://localhost:8545 --via-ir",
    "test:pancakeswap-anvil": "forge test --match-path script/processes/PancakeSwapTradePlacement.s.sol -vvvv --fork-url http://localhost:8545 --via-ir",
    "test:oneinch-anvil": "forge test --match-path script/processes/OneInchTradePlacement.s.sol -vvvv --fork-url http://localhost:8545 --via-ir",
    "test:processes-anvil": "npm run test:protocol-anvil && npm run test:trade-placement-anvil",
    "test:protocol-anvil": "forge script script/Protocol.s.sol:Protocol --via-ir --rpc-url http://localhost:8545 -vvvv",
    "test:trade-placement-anvil": "forge test --match-path script/processes/TradePlacement.s.sol --fork-url http://localhost:8545 --via-ir && forge script script/TestSingleReserves.s.sol:TestReservesScript --via-ir --rpc-url http://localhost:8545",
    "test:reserves-anvil": "forge script script/TestSingleReserves.s.sol:TestReservesScript --via-ir --rpc-url http://localhost:8545 -vvvv",
    "test:multi:anvil": "forge script script/processes/MultiSettle.s.sol:MultiSettle --via-ir --rpc-url http://localhost:8545 -vvvv",
    "test:insta-anvil": "forge test --match-path script/processes/Instasettle.s.sol --fork-url http://localhost:8545 --via-ir -vvv",
    "test:trade-cancel-test-anvil": "FOUNDRY_PROFILE=via_ir forge test --match-path script/processes/TradeCancel.s.sol -vvv --fork-url http://localhost:8545",
    "# Deployment Scripts": "# Scripts for deploying to different networks",
    "deploy:mainnet": "forge script script/DeployMainnet.s.sol:DeployMainnet --rpc-url $MAINNET_RPC_URL --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY -vvvv",
    "deploy:mainnet:dry-run": "forge script script/DeployMainnet.s.sol:DeployMainnet --rpc-url $MAINNET_RPC_URL --dry-run -vvvv",
    "deploy:mainnet:simulate": "forge script script/DeployMainnet.s.sol:DeployMainnet --rpc-url $MAINNET_RPC_URL --simulate -vvvv",
    "deploy:barebones": "forge script script/DeployBarebones.s.sol:DeployBarebones --rpc-url $MAINNET_RPC_URL --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY -vvvv",
    "deploy:barebones:dry-run": "forge script script/DeployBarebones.s.sol:DeployBarebones --rpc-url $MAINNET_RPC_URL -vvvv",
    "deploy:barebones:simulate": "forge script script/DeployBarebones.s.sol:DeployBarebones --rpc-url $MAINNET_RPC_URL -vvvv",
    "deploy:barebones:god-mode": "source .env && forge script script/DeployBarebones.s.sol --rpc-url $MAINNET_RPC_URL --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY -vvvv",
    "deploy:mainnet:verify": "forge verify-contract $CORE_ADDRESS src/Core.sol:Core --etherscan-api-key $ETHERSCAN_API_KEY --chain mainnet --constructor-args $(cast abi-encode 'constructor(address,address,address)' $STREAM_DAEMON_ADDRESS $EXECUTOR_ADDRESS $REGISTRY_ADDRESS)",
    "deploy:mainnet:verify-all": "npm run deploy:mainnet:verify && forge verify-contract $STREAM_DAEMON_ADDRESS src/StreamDaemon.sol:StreamDaemon --etherscan-api-key $ETHERSCAN_API_KEY --chain mainnet && forge verify-contract $EXECUTOR_ADDRESS src/Executor.sol:Executor --etherscan-api-key $ETHERSCAN_API_KEY --chain mainnet && forge verify-contract $REGISTRY_ADDRESS src/Registry.sol:Registry --etherscan-api-key $ETHERSCAN_API_KEY --chain mainnet",
    "deploy:mainnet:verify-deployment": "forge script script/VerifyDeployment.s.sol:VerifyDeployment --rpc-url $MAINNET_RPC_URL -vvvv",
    "# DEX Integration Scripts": "# Scripts for adding new DEXes to deployed protocol",
    "add:pancakeswap": "forge script script/AddPancakeSwap.s.sol:AddPancakeSwap --rpc-url $MAINNET_RPC_URL --broadcast -vvvv",
    "add:pancakeswap:dry-run": "forge script script/AddPancakeSwap.s.sol:AddPancakeSwap --rpc-url $MAINNET_RPC_URL --dry-run -vvvv",
    "add:pancakeswap:simulate": "forge script script/AddPancakeSwap.s.sol:AddPancakeSwap --rpc-url $MAINNET_RPC_URL --simulate -vvvv"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/1SLiquidity/core.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/1SLiquidity/core/issues"
  },
  "homepage": "https://github.com/1SLiquidity/core#readme"
}
